<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Stylesheets -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      href="https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/stylesheets/panitLt2Style.css" />
    <!-- --------- FAVICON ---------- -->
    <link
      rel="shortcut icon"
      href="assets/img/logiPsikologi.png"
      type="image/x-icon"
    />
    <title>Qurban</title>
    <!-- font awesome icon -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />

    <!-- Firebase SDK v8 -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
  </head>
  <body>
    <!-- SIDEBAR -->
    <section id="sidebar">
      <a href="#" class="brand"
        ><i
          class="fa-solid fa-star-and-crescent icon"
          style="color: #74c0fc"
        ></i>
        Qurban</a
      >
      <ul class="side-menu">
        <li>
          <a href="#" class="active"
            ><i class="bx bxs-dashboard icon"></i> Dashboard</a
          >
        </li>
        <li class="divider" data-text="main">Main</li>
        <li>
          <a href="/panitLt2/setPemrosesanDagingDashboard"
            ><i class="bx bxs-chart icon"></i> Set Pemrosesan Daging</a
          >
        </li>
        <li>
          <a href="/panitLt2/revertPemrosesanDagingDashboard"
            ><i class="bx bxs-chart icon"></i> Revert Pemrosesan Daging</a
          >
        </li>
        <li>
          <a href="/panitLt2/setReadyDeliverDashboard"
            ><i class="bx bxs-chart icon"></i> Set Ready Deliver</a
          >
        </li>
        <li>
          <a href="/panitLt2/revertReadyDeliverDashboard"
            ><i class="bx bxs-chart icon"></i> Revert Ready Deliver</a
          >
        </li>
      </ul>
    </section>

    <!-- NAVBAR -->
    <section id="content">
      <nav>
        <i class="bx bx-menu toggle-sidebar"></i>
        <form action="#"></form>
        <span class="divider"></span>
        <div class="profile">
          <img src="/img/people.png" alt="" />
          <ul class="profile-link">
            <li>
              <a data-bs-toggle="modal" data-bs-target="#modalLogout"
                ><i class="bx bxs-log-out-circle"></i> Logout</a
              >
            </li>
          </ul>
        </div>
      </nav>

      <!-- MAIN -->
      <main>
        <h1 class="title">Hello, <%= currentUser.name %></h1>
        <ul class="breadcrumbs">
          <li><a href="#">Home</a></li>
          <li class="divider">/</li>
          <li><a href="#" class="active">Dashboard</a></li>
        </ul>
        <div class="info-data">
          <section class="section" id="explore">
            <!-- Project boxes will be dynamically inserted here -->
          </section>
        </div>
        <div class="data"></div>
      </main>
    </section>

    <!-- Modal Logout -->
    <div class="modal fade" id="modalLogout" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Logout</h1>
          </div>
          <div class="modal-body">Are you sure want to logout?</div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Back
            </button>
            <a href="/auth/logout">
              <button type="button" class="btn btn-danger lastLogoutButton">
                Logout
              </button>
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- JavaScript SDK -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>
    <script src="scripts/panitLt2Script.js"></script>
    <script>
      // Konfigurasi Firebase

      // Inisialisasi Firebase
      var firebaseConfig = <%- JSON.stringify(firebaseConfig) %>;
      firebase.initializeApp(firebaseConfig);
      const database = firebase.database();

      // Referensi ke path data sapi
      const sapiRef = database.ref("sapi/");

      // Fungsi untuk memperbarui konten halaman
      function updateDataOnPage(sapi) {
        const exploreSection = document.getElementById("explore");
        exploreSection.innerHTML = "";
        const body = document.querySelector("body");

        for (let index = 0; index < Math.floor(sapi.length / 3) + 1; index++) {
          const projectContainer = document.createElement("div");
          projectContainer.className = "project-container";

          for (let i = index * 3; i < index * 3 + 3; i++) {
            if (i < sapi.length) {
              const projectBox = document.createElement("div");
              projectBox.className = "project-box";
              projectBox.setAttribute("data-bs-toggle", "modal");
              projectBox.setAttribute(
                "data-bs-target",
                `#modalSapi${sapi[i].idSapi}`
              );

              projectBox.innerHTML = `
          <i class="fa-solid fa-cow" style="color: #74C0FC;"></i>
          <h3>Sapi ${sapi[i].idSapi}</h3>
          <label>${sapi[i].state}</label>
        `;
              projectContainer.appendChild(projectBox);

              // Cek apakah modal dengan ID ini sudah ada
              let modal = document.getElementById(`modalSapi${sapi[i].idSapi}`);
              if (modal) {
                // Jika modal sudah ada, update konten di dalam modal
                let temp = `
          <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Sapi ${sapi[i].idSapi}</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
          `;

                const mudhohis = sapi[i].mudhohi;
                mudhohis.forEach((mudhohi) => {

                  temp += `
              <hr>
              <h2 class="fs-5">${mudhohi.name}</h2>
              <p>Alamat: ${mudhohi.alamat}</p>`
              if(mudhohi.isPostponed && !mudhohi.isDelivered){
                temp += `<p>Status: <b>Tertunda</b><p>`
              }
              else if(mudhohi.isDelivered && !mudhohi.isPostponed){
                temp += `<p>Status: <b>Sudah dikirim</b><p><br>
                  <p>Username pengirim: ${mudhohi.usernamePengirim}</p><br>
                  <p>Bukti: </p> <br>
                  <img src="${mudhohi.bukti}"
                style="width: 300px; height: auto; border-radius: 15px; object-fit: cover;"
                />
                  `
              }
              else{
                temp += `<p>Status: <b>Belum dikirim</b><p>`
              }
                });

                temp += `</div></div></div>`;
                modal.innerHTML = temp;
              } else {
                // Jika modal belum ada, buat modal baru
                modal = document.createElement("div");
                modal.className = "modal fade";
                modal.setAttribute("id", `modalSapi${sapi[i].idSapi}`);
                modal.setAttribute("tabindex", "-1");
                modal.setAttribute("aria-labelledby", "exampleModalLabel");
                modal.setAttribute("aria-hidden", "true");

                let temp = `
          <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Sapi ${sapi[i].idSapi}</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
          `;

                const mudhohis = sapi[i].mudhohi;
                mudhohis.forEach((mudhohi) => {
                  console.log(mudhohi);
                  temp += `
              <hr>
              <h2 class="fs-5">${mudhohi.name}</h2>
              <p>Alamat: ${mudhohi.alamat}</p>`

              if(mudhohi.isPostponed && !mudhohi.isDelivered){
                temp += `<p>Status: <b>Tertunda</b><p>`
              }
              else if(mudhohi.isDelivered && !mudhohi.isPostponed){
                temp += `<p>Status: <b>Sudah dikirim</b><p><br>
                  <p>Username pengirim: ${mudhohi.usernamePengirim}</p><br>
                  <p>Bukti: </p> <br>
                  <img src="${mudhohi.bukti}"
                style="width: 300px; height: auto; border-radius: 15px; object-fit: cover;"
                />
                  `
              }
              else{
                temp += `<p>Status: <b>Belum dikirim</b><p>`
              }
                });

                temp += `</div></div></div>`;
                modal.innerHTML = temp;
                body.appendChild(modal); // Append modal baru ke body
              }
            }
          }
          exploreSection.appendChild(projectContainer);
        }
      }

      async function transformData(data) {
        const result = [];

        for (const idSapi in data) {
          const sapi = data[idSapi];
          const sapiObj = {
            idSapi: idSapi,
            foto: sapi.foto,
            state: sapi.state,
            mudhohi: [],
          };

          for (const key in sapi) {
            if (
              key !== "foto" &&
              key !== "state" &&
              typeof sapi[key] === "object"
            ) {
              const mudhohiObj = await database
                .ref("mudhohis/" + key)
                .once("value")
                .then((snapshot) => snapshot.val());

              const userObj = await database
                .ref("users/")
                .orderByChild("mudhohiId")
                .equalTo(key)
                .once("value")
                .then((snapshot) => {
                  const userData = snapshot.val();
                  if (userData) {
                    const firstUserKey = Object.keys(userData)[0];
                    return userData[firstUserKey].name;
                  }
                  return null;
                });

              sapiObj.mudhohi.push({
                idMudhohi: key,
                ...mudhohiObj,
                name: userObj,
                isDelivered: sapi[key].isDelivered,
                isPostponed: sapi[key].isPostponed,
                bukti: sapi[key].bukti,
                usernamePengirim: sapi[key].usernamePengirim
              });
            }
          }

          result.push(sapiObj);
        }

        return result;
      }

      // Listen untuk perubahan data
      sapiRef.on("value", async (snapshot) => {
        const data = snapshot.val();
        console.log("halow");
        if (data) {
          const sapiArray = await transformData(data);
          console.log(sapiArray);
          updateDataOnPage(sapiArray);
        }
      });
    </script>
  </body>
</html>
